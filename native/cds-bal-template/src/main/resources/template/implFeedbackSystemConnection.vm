import ballerinax/health.fhir.cds;

#set ($map = $service.getCdsHooks())
# This method acts like an interface to route the feedback request appropriate feedback
# connection methods.
#
# + hookId - id of the hook being invoked.
# + feedback - Feedback record to be processed.
# + return - return CdsError, if any.
isolated function submitFeedback(string hookId, cds:Feedbacks feedback) returns cds:CdsError? {
    match (hookId) {
        #foreach($mapEntry in $map.entrySet())
        "$mapEntry.value.getId()" => {
            return connectFeedbackSystemFor$mapEntry.key#[[(]]#feedback);
        }
        #end
    }

    string message = string `Can not find a cds service with the name: ${hookId}`;
    int statusCode = 404;
    cds:CdsError cdsError = cds:createCdsError(message, statusCode);
    return cdsError;
}

# ====================================== Please do your implementations to the below methods ===========================

#foreach($mapEntry in $map.entrySet())
# Handle feedback service connectivity.
#
# + feedback - Feedback record to be processed.
# + return - return CdsError, if any.
isolated function connectFeedbackSystemFor$mapEntry.key (cds:Feedbacks feedback) returns cds:CdsError? {
    string hookId = "$mapEntry.value.getId()";
    return cds:createCdsError(string `Rule repository backend not implemented/ connected yet`, 501);
}

#end
